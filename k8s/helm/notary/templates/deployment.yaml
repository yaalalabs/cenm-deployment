apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "notary.fullname" . }}
  labels:
    {{- include "notary.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "notary.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "notary.selectorLabels" . | nindent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "notary.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: init-registration
          env:
            - name: ACCEPT_LICENSE
              value: "{{required "You must accept the license agreement to use this software." .Values.acceptLicense }}"
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ required "notary[registration]: missing value for .Values.dockerImage.name" .Values.dockerImage.name }}:{{ required "notary[registration]: missing value for .Values.dockerImage.tag" .Values.dockerImage.tag }}"
          imagePullPolicy: {{ .Values.dockerImage.pullPolicy }}
          command: ["/bin/bash", "-c"]
          args:
          - |-
            ls -alr
            cp CM-FILES/notary.conf etc/
            cp CM-FILES/*.sh bin/
            chmod +x bin/*
            bin/notary-initial-registration.sh
          volumeMounts:
          - name: notary-conf
            mountPath: /opt/cenm/CM-FILES/notary.conf
            subPath: notary.conf
          - name: notary-conf
            mountPath: /opt/cenm/CM-FILES/notary-initial-registration.sh
            subPath: notary-initial-registration.sh
          - name: notary-conf
            mountPath: /opt/cenm/CM-FILES/run.sh
            subPath: run.sh
          - name: notary-etc
            mountPath: /opt/cenm/etc
          - name: notary-certificates
            mountPath: /opt/cenm/certificates
          - name: notary-service-certificates
            mountPath: /opt/cenm/service-certificates
          - name: notary-nodeinfo
            mountPath: /opt/cenm/additional-node-infos
          - name: notary-logs
            mountPath: /opt/cenm/logs
          - name: notary-h2
            mountPath: /opt/cenm/h2
          - name: pki-certs-keys
            mountPath: /opt/cenm/DATA
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      containers:
        - name: main
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ required "notary[main]: missing value for .Values.dockerImage.name" .Values.dockerImage.name }}:{{ required "notary[main]: missing value for .Values.dockerImage.tag" .Values.dockerImage.tag }}"
          imagePullPolicy: {{ .Values.dockerImage.pullPolicy }}
          command: ["/bin/bash", "-c"]
          args:
          - |-
            cp CM-FILES/*.sh bin/
            chmod +x bin/*
            bin/run.sh
          volumeMounts:
          - name: notary-conf
            mountPath: /opt/cenm/CM-FILES/notary.conf
            subPath: notary.conf
          - name: notary-conf
            mountPath: /opt/cenm/CM-FILES/notary-initial-registration.sh
            subPath: notary-initial-registration.sh
          - name: notary-conf
            mountPath: /opt/cenm/CM-FILES/run.sh
            subPath: run.sh
          - name: notary-etc
            mountPath: /opt/cenm/etc
          - name: notary-certificates
            mountPath: /opt/cenm/certificates
          - name: notary-logs
            mountPath: /opt/cenm/logs
          - name: notary-h2
            mountPath: /opt/cenm/h2
          - name: pki-certs-keys
            mountPath: /opt/cenm/DATA
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            tcpSocket:
              port: {{ .Values.p2pPort }}
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          {{- end  }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            tcpSocket:
              port: {{ .Values.p2pPort }}
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
          {{- end  }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        {{- if .Values.logsContainersEnabled }}
        - name: logs-notary
          image: "{{ required "notary[logs]: missing value for .Values.dockerImage.name" .Values.dockerImage.name }}:{{ required "notary[logs]: missing value for .Values.dockerImage.tag" .Values.dockerImage.tag }}"
          imagePullPolicy: {{ .Values.dockerImage.pullPolicy }}
          command: ["/bin/bash", "-c"]
          args:
          - |-
            cd /opt/cenm/
            while true; do tail -f logs/*.log 2>/dev/null; sleep 5; done
            # in case sth went wrong just wait indefinitely ...
            tail -f /dev/null
          volumeMounts:
          - name: notary-logs
            mountPath: /opt/cenm/logs
        {{- end  }}
      volumes:
      - name: notary-conf
        configMap:
          name: {{ .Values.prefix }}-notary-conf
      - name: notary-etc
        persistentVolumeClaim:
          claimName: {{ .Values.prefix }}-notary-etc
      - name: notary-service-certificates
        persistentVolumeClaim:
          claimName: {{ .Values.prefix }}-notary-service-certificates
      - name: notary-certificates
        persistentVolumeClaim:
          claimName: {{ .Values.prefix }}-notary-certificates
      - name: notary-logs
        persistentVolumeClaim:
          claimName: {{ .Values.prefix }}-notary-logs
      - name: notary-nodeinfo
        persistentVolumeClaim:
          claimName: {{ .Values.prefix }}-notary-nodeinfo
      - name: notary-h2
        persistentVolumeClaim:
          claimName: {{ .Values.prefix }}-notary-h2
      - name: pki-certs-keys
        persistentVolumeClaim:
          claimName: {{ .Values.prefix }}-pki-certs-keys
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
