{
  networkServices {
    doormanURL = "http://{{ .Values.prefix }}-{{ .Values.networkServices.doormanURL }}"
    networkMapURL = "http://{{ .Values.prefix }}-{{ .Values.networkServices.networkMapURL }}"
  },
  dataSourceProperties {
    dataSource {
      password = "{{ .Values.dataSourceProperties.dataSource.password }}"
      url = "{{ .Values.dataSourceProperties.dataSource.url }}"
      user = "{{ .Values.dataSourceProperties.dataSource.user }}"
    },
    dataSourceClassName = "{{ .Values.dataSourceProperties.dataSourceClassName }}"
  },
  notary {
    validating = "{{ .Values.notary.validating }}",
    serviceLegalName = "{{ .Values.notary.serviceLegalName }}",
    jpa {
      connectionRetries = 1
      dataSourceProperties {
        autoCommit = "false"
        jdbcUrl = "jdbc:postgresql://10.1.59.77:26257/corda"
      }
      database {
        validateSchema = true
      }
    }
  },
  baseDirectory : ".",
  devMode =  {{ .Values.devMode }},
  keyStorePassword: "test",
  trustStorePassword: "4uMBwtHWKDqy",
  p2pAddress: "{{ required "Public IP address required (add --set notaryPublicIP=x.x.x.x to your helm command)" .Values.notaryPublicIP }}:{{ .Values.p2pPort }}",
  emailAddress: "amitha@yaalalabs.com",
  myLegalName: "O=Initial notary for {{ .Values.prefix | upper }} environment,L=Zurich,C=CH",
  rpcSettings {
    address = "{{ .Values.rpcSettingsAddress }}:{{ .Values.rpcSettingsAddressPort }}"
    adminAddress="{{ .Values.rpcSettingsAdminAddress }}:{{ .Values.rpcSettingsAdminAddressPort }}"
    standAloneBroker="{{ .Values.rpcSettingsStandAloneBroker }}"
    useSsl="{{ .Values.rpcSettingsUseSsl }}"
  },
  rpcUsers = [
    {
        username="{{ .Values.rpcUsers.username }}"
        password="{{ .Values.rpcUsers.password }}"
      permissions = [
        ALL
      ]
    }
  ]
  jarDirs: [
    "plugins",
    "cordapps"
  ],
  sshd {
    port = {{ .Values.sshdPort }}
  }
}